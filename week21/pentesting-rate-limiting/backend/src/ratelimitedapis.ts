import express, { json } from 'express';
import rateLimit from 'express-rate-limit';
const app = express();
app.use(express.json())

const otpLimiter = rateLimit({
  windowMs: 5 * 60 * 1000,    // 5 minutes
  limit: 3,     // limits each IP to 3 otp requests per window
  message: 'Too many requests.. Please try again later',
  standardHeaders: true,
  legacyHeaders: false
})

const passwordResetLimiter = rateLimit({
  windowMs: 15 * 60 * 1000,
  limit: 5,
  message: 'Too many requests.. Please try again later',
  standardHeaders: true,
  legacyHeaders: false
})

const otpStore: Record<string, string> = {};

app.get('/', (req, res) => {
  res.json({
    message: 'this is the home page'
  });
});

app.post('/generate-otp', otpLimiter, (req, res) => {
  const email = req.body.email
  if (!email) {
    res.status(400).json({message: 'email is required'})
  }

  // generate otp
  const otp = Math.floor(100000 + Math.random() * 900000).toString()
  // add otp to store
  otpStore[email] = otp
  // log otp
  console.log('otp for ' + email + ' is ' + otp)

  console.log(otpStore)

  res.status(200).json({
    message: "otp has been generated and logged"
  })
})

app.post('/reset-password', passwordResetLimiter, (req, res) => {
  const {email, otp, newPassword} = req.body
  if (!email || !otp || !newPassword) {
    res.status(400).json({
      message: 'email, otp and newPassword are required'
    })
  }

  if (otpStore[email] === otp) {
    console.log('Password for ' + email + ' has been set to ' + newPassword)
    // delete otp after use
    delete otpStore[email]
    res.status(200).json({
      message: 'password has been reset successfully'
    })
  }
  else {
    res.status(400).json({
      message: 'invalid otp'
    })
  }
})

app.listen(3000, () => console.log('server started on 3000'));